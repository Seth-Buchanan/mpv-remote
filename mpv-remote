#!/usr/bin/python3
import serial.tools.list_ports
import socket
import sys
import keyboard
from time import sleep

ports = serial.tools.list_ports.comports()
serialInst = serial.Serial()


isWindows = sys.platform.startswith('win')

# TODO: Make better file explorer vs mpv detection
# TODO: Make Windows compatible
# TODO: Find a way to detect which serial port the arduino is on
# TODO: Make this whole script an mpv lua plugin
# TODO: Use mpv plugin to browse video files


def main():
    connectToArduino()
    while True:
        mpvMode()
        # netrwMode()


def connectToArduino():
    # portVar = "/dev/ttyACM0"
    serialInst.baudrate = 9600
    serialInst.port = serial.tools.list_ports.grep("arduino")
    serialInst.open()


def mpvMode():
    mpvCommands = {
        b'E7180586': b'cycle pause',       # ENTER
        b'BE410586': b'quit',              # .
        b'EA150586': b'seek  5',           # >
        b'E9160586': b'seek -5',           # <
        b'BD420586': b'seek  60',          # ^
        b'BC430586': b'seek -60',          # v
        b'807F0586': b'playlist-next',     # >>|
        b'7F800586': b'playlist-prev',     # |<<
        b'E31C0586': b'cycle sub',         # CCD
        b'E8170586': b'show-progress',     # INFO*
        b'F6090586': b'cycle fullscreen',  # 0
        b'F30C0586': b'add volume  5',     # VOL ^
        b'F20D0586': b'add volume -5'      # VOL v
    }

    while True:
        if serialInst.in_waiting:
            packet = serialInst.readline().rstrip()
            # rstrip() removes the \r\n off the end of the arduino ouput
            print(packet)

            if packet in mpvCommands.keys():
                command = mpvCommands.get(packet)
                print(command.decode("ascii"))
                doMpvCmd(command)

                if command == b'quit':
                    break
            else:
                print("unbound button")
        sleep(.1)
    # netrwMode()  # comment if you don't want to browse from netrw


def netrwMode():
    keyBindings = {
        b'E7180586': "`",      # ENTER
        b'EA150586': "enter",  # >
        b'E9160586': "-",      # <
        b'BD420586': "k",      # ^
        b'BC430586': "j"       # v
    }

    while True:
        if serialInst.in_waiting:
            packet = serialInst.readline().rstrip()
            print(packet)

            if packet in keyBindings:
                key = keyBindings.get(packet)
                print(key)
                click(key)

                if key == "`":
                    break
            else:
                print("unbound button")
        sleep(.1)
    mpvMode()


def click(key):
    keyboard.press(key)
    sleep(.1)
    keyboard.release(key)


def doMpvCmd(thecmd):
    try:
        if isWindows:
            f = open(r'\\.\pipe\mpv-pipe', 'wb')
            f.write(thecmd)
            f.write(b'\n')
            f.close()
        else:
            client = socket.socket(socket.AF_UNIX)
            client.connect('/tmp/mpv-socket')
            client.send(thecmd)
            client.send(b'\n')
            # ^ adds the newline character that effectively enters the command
            client.close()
    except IOError:
        # keeping silent in case mpv is not open
        pass


if __name__ == "__main__":
    main()

# portList = []
# for onePort in ports:
#     portList.append(str(onePort))
#
# val = input("select Port: COM")
#
# for i in range(0, len(portList)):
#     if portList[i].startswith("COM" + str(val)):
#         portVar = "COM" + str(val)
#         print(portVar[i])
